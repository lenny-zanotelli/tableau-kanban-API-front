!function(){var t={hideModals:function(){const t=document.querySelectorAll(".modal");for(const e of t)e.classList.remove("is-active")},base_url:"http://localhost:3000"};const e={makeTagInDOM:function(t){const o=document.createElement("span");o.textContent=t.name,o.style.backgroundColor=t.color,o.dataset.tagId=t.id,o.classList.add("tag");const a=document.querySelector(`.box[data-card-id="${t.card_has_tag.card_id}"]`);o.addEventListener("dblclick",e.deleteTagFromCard),a.querySelector(".tags").appendChild(o)},deleteTagFromCard:async function(e){const o=e.target.closest(".box").dataset.cardId,a=e.target.dataset.tagId;try{const s=await fetch(`${t.base_url}/cards/${o}/tags/${a}`,{method:"DELETE"}),n=await s.json();if(!s.ok)throw n;e.target.remove()}catch(s){alert("Impossible de dissocier le tag de sa carte !"),console.error(s)}},showAssociateTagToCardModal:async function(e){const o=document.querySelector("#addTagToCardModal");o.classList.add("is-active");const a=e.target.closest(".box");o.querySelector('input[name="card_id"]').value=a.dataset.cardId;const s=o.querySelector('select[name="tag_id"]');s.textContent="";try{const e=await fetch(t.base_url+"/tags"),o=await e.json();if(!e.ok)throw o;for(const t of o){const e=document.createElement("option");e.value=t.id,e.textContent=t.name,s.appendChild(e)}}catch(n){alert("Impossible de r\xe9cup\xe9rer les tags !"),console.error(n)}},handleAddTagToCardForm:async function(o){o.preventDefault();const a=new FormData(o.target);try{const o=await fetch(`${t.base_url}/cards/${a.get("card_id")}/tags`,{method:"POST",body:a}),s=await o.json();if(console.log(s),!o.ok)throw s;const n=s.tags.find(t=>t.id==a.get("tag_id"));e.makeTagInDOM(n)}catch(s){console.log(s)}t.hideModals()}};var o=e;const a={showAddCardModal:function(t){const e=t.target.closest(".panel").dataset.listId,o=document.getElementById("addCardModal");o.querySelector('input[name="list_id"]').value=e,o.classList.add("is-active")},handleAddCardForm:async function(e){e.preventDefault();const o=new FormData(e.target);console.log(o instanceof FormData);try{const e=await fetch(t.base_url+"/cards",{method:"POST",body:o}),s=await e.json();if(!e.ok)throw new Error("Une erreur fatale est survenue : Impossible de cr\xe9er la carte");a.makeCardInDOM(s)}catch(s){console.log(s)}t.hideModals(),e.target.reset()},makeCardInDOM:function(t){const e=document.getElementById("card-template"),s=document.importNode(e.content,!0);s.querySelector(".card-name").textContent=t.title,s.querySelector(".box").dataset.cardId=t.id,s.querySelector('form input[name="card-id"]').value=t.id,s.querySelector(".box").style.backgroundColor=t.color,s.querySelector(".edit-card-icon").addEventListener("click",a.showEditCardForm),s.querySelector(".edit-card-form").addEventListener("submit",a.handleEditCardForm),s.querySelector(".delete-card-icon").addEventListener("click",a.deleteCard),s.querySelector(".associate-tag-icon").addEventListener("click",o.showAssociateTagToCardModal),document.querySelector(`[data-list-id="${t.list_id}"]`).querySelector(".panel-block").appendChild(s)},showEditCardForm:function(t){const e=t.target.closest(".box");e.querySelector(".card-name").classList.add("is-hidden"),e.querySelector(".edit-card-form").classList.remove("is-hidden")},handleEditCardForm:async function(e){e.preventDefault();const o=new FormData(e.target),a=e.target.previousElementSibling;try{const s=await fetch(`${t.base_url}/cards/${o.get("card-id")}`,{method:"PUT",body:o}),n=await s.json();if(!s.ok)throw n;a.textContent=n.title,e.target.closest(".box").style.backgroundColor=n.color}catch(s){console.log(s)}e.target.classList.add("is-hidden"),a.classList.remove("is-hidden")},deleteCard:async function(e){const o=e.target.closest(".box"),a=o.dataset.cardId;try{const e=await fetch(`${t.base_url}/cards/${a}`,{method:"DELETE"}),s=await e.json();if(!e.ok)throw s;o.remove()}catch(s){console.log(s)}},handleDragCard:function(t){const e=t.from,o=t.to;let s=e.querySelectorAll(".box");if(a.updateAllCardsWithDrag(s),e===o)return;s=o.querySelectorAll(".box");const n=o.closest(".panel").dataset.listId;a.updateAllCardsWithDrag(s,n)},updateAllCardsWithDrag:function(e,o=null){e.forEach(async(e,a)=>{const s=new FormData;s.set("position",a),o&&s.set("list_id",o);try{const o=await fetch(`${t.base_url}/cards/${e.dataset.cardId}`,{method:"PUT",body:s}),a=await o.json();if(console.log(a),!o.ok)throw a}catch(n){alert("Impossible de d\xe9placer la carte !"),console.error(n)}})}};var s=a;const n={showAddListModal:function(){document.getElementById("addListModal").classList.add("is-active")},handleAddListForm:async function(e){e.preventDefault();const o=new FormData(e.target);try{const e=await fetch(t.base_url+"/lists",{method:"POST",body:o}),a=await e.json();if(!e.ok)throw new Error("Une erreur fatale est survenue : impossible de cr\xe9er la liste");n.makeListInDOM(a)}catch(a){console.log(a)}t.hideModals(),e.target.reset()},showEditListForm:function(t){t.target.classList.add("is-hidden"),t.target.nextElementSibling.classList.remove("is-hidden")},handleEditTitleListForm:async function(e){e.preventDefault();const o=new FormData(e.target),a=e.target.previousElementSibling,s=o.get("list-id");console.log(s);try{const e=await fetch(`${t.base_url}/lists/${s}`,{method:"PUT",body:o}),n=await e.json();if(!e.ok)throw n;a.textContent=n.name}catch(n){console.log(n)}e.target.classList.add("is-hidden"),a.classList.remove("is-hidden"),e.target.reset()},makeListInDOM:function(t){const e=document.getElementById("list-template"),o=document.importNode(e.content,!0);o.querySelector("h2").textContent=t.name,o.querySelector(".panel").dataset.listId=t.id,o.querySelector("form input[name='list-id']").value=t.id,o.querySelector(".button--add-card").addEventListener("click",s.showAddCardModal),o.querySelector("h2").addEventListener("dblclick",n.showEditListForm),o.querySelector(".edit-list-form").addEventListener("submit",n.handleEditListForm),o.querySelector(".button--delete-list").addEventListener("click",n.deleteList);const a=o.querySelector(".panel-block");new Sortable(a,{group:"lists",draggable:".box",animation:150,onEnd:s.handleDragCard});const r=document.querySelector("#lists-container"),d=r.querySelector(".panel");d?d.before(o):r.appendChild(o)},showEditListForm:function(t){t.target.classList.add("is-hidden"),t.target.nextElementSibling.classList.remove("is-hidden")},handleEditListForm:async function(e){e.preventDefault();const o=new FormData(e.target),a=e.target.previousElementSibling,s=o.get("list-id");try{const e=await fetch(`${t.base_url}/lists/${s}`,{method:"PUT",body:o}),n=await e.json();if(!e.ok)throw n;a.textContent=n.name}catch(n){console.log(n)}e.target.classList.add("is-hidden"),a.classList.remove("is-hidden")},deleteList:async function(e){if(!confirm("Voulez-vous vraiment supprimer cette liste ?"))return;const o=e.target.closest(".panel"),a=o.dataset.listId;try{const e=await fetch(`${t.base_url}/lists/${a}`,{method:"DELETE"}),s=await e.json();if(!e.ok)throw s;o.remove()}catch(s){console.log(s)}},handleDragList:function(){document.querySelectorAll(".panel").forEach(async(e,o)=>{const a=new FormData;a.set("position",o);try{const o=await fetch(`${t.base_url}/lists/${e.dataset.listId}`,{method:"PUT",body:a}),s=await o.json();if(!o.ok)throw s;console.log(s)}catch(s){console.log(s)}})}};var r=n;const d={init:function(){console.log("app.init !"),d.addListenerToActions(),d.getListsFromAPI()},addListenerToActions:function(){document.getElementById("addListButton").addEventListener("click",r.showAddListModal);const e=document.querySelectorAll(".close");for(const o of e)o.addEventListener("click",t.hideModals);document.querySelector("#addListModal form").addEventListener("submit",r.handleAddListForm),document.querySelector("#addCardModal form").addEventListener("submit",s.handleAddCardForm),document.querySelector("#addTagToCardModal form").addEventListener("submit",o.handleAddTagToCardForm)},getListsFromAPI:async function(){try{const e=await fetch(t.base_url+"/lists"),a=await e.json();if(!e.ok)throw a;for(const t of a){r.makeListInDOM(t);for(const e of t.cards){s.makeCardInDOM(e);for(const t of e.tags)o.makeTagInDOM(t)}}const n=document.querySelector(".card-lists");new Sortable(n,{draggable:".panel",animation:150,onEnd:r.handleDragList})}catch(e){console.log(e)}}};document.addEventListener("DOMContentLoaded",d.init)}();